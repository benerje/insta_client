[{"C:\\Users\\bunny\\Desktop\\completed\\Mern\\server\\client\\src\\index.js":"1","C:\\Users\\bunny\\Desktop\\completed\\Mern\\server\\client\\src\\App.js":"2","C:\\Users\\bunny\\Desktop\\completed\\Mern\\server\\client\\src\\reportWebVitals.js":"3","C:\\Users\\bunny\\Desktop\\completed\\Mern\\server\\client\\src\\components\\Navbar.js":"4","C:\\Users\\bunny\\Desktop\\completed\\Mern\\server\\client\\src\\components\\screens\\Home.js":"5","C:\\Users\\bunny\\Desktop\\completed\\Mern\\server\\client\\src\\components\\screens\\Profile.js":"6","C:\\Users\\bunny\\Desktop\\completed\\Mern\\server\\client\\src\\components\\screens\\UserProfile.js":"7","C:\\Users\\bunny\\Desktop\\completed\\Mern\\server\\client\\src\\components\\screens\\SignUp.js":"8","C:\\Users\\bunny\\Desktop\\completed\\Mern\\server\\client\\src\\components\\screens\\SignIn.js":"9","C:\\Users\\bunny\\Desktop\\completed\\Mern\\server\\client\\src\\components\\screens\\CreatePost.js":"10","C:\\Users\\bunny\\Desktop\\completed\\Mern\\server\\client\\src\\components\\screens\\SubscribedUser.js":"11","C:\\Users\\bunny\\Desktop\\completed\\Mern\\server\\client\\src\\reducers\\userReducer.js":"12","C:\\Users\\bunny\\Desktop\\completed\\Mern\\server\\client\\src\\components\\screens\\Reset.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":2166,"mtime":1608450224861,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":1626,"mtime":1608371685303,"results":"18","hashOfConfig":"15"},{"size":6535,"mtime":1608372802501,"results":"19","hashOfConfig":"15"},{"size":3724,"mtime":1610627296404,"results":"20","hashOfConfig":"15"},{"size":5186,"mtime":1608384828633,"results":"21","hashOfConfig":"15"},{"size":3575,"mtime":1608390590552,"results":"22","hashOfConfig":"15"},{"size":1970,"mtime":1608385403175,"results":"23","hashOfConfig":"15"},{"size":3043,"mtime":1608055316770,"results":"24","hashOfConfig":"15"},{"size":6544,"mtime":1608372782543,"results":"25","hashOfConfig":"15"},{"size":546,"mtime":1608391666054,"results":"26","hashOfConfig":"15"},{"size":1396,"mtime":1608450239361,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"dl8tpl",{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"30"},"C:\\Users\\bunny\\Desktop\\completed\\Mern\\server\\client\\src\\index.js",[],["66","67"],"C:\\Users\\bunny\\Desktop\\completed\\Mern\\server\\client\\src\\App.js",["68","69"],"import React,{useEffect,createContext,useReducer,useContext} from 'react'\nimport Navbar from './components/Navbar'\nimport \"./App.css\"\nimport {BrowserRouter,Route, Switch, useHistory} from 'react-router-dom'\nimport Home from './components/screens/Home'\nimport Profile from './components/screens/Profile'\nimport UserProfile from './components/screens/UserProfile'\nimport Signup from './components/screens/SignUp'\nimport SignIn from './components/screens/SignIn'\nimport CreatePost from './components/screens/CreatePost'\nimport Reset from './components/screens/Reset'\nimport SubscribedUser from './components/screens/SubscribedUser'\nimport {reducer,initialState} from './reducers/userReducer'\n\n\nexport const UserContext = createContext()\n\nconst Routing = ()=>{\n  const {state,dispatch} = useContext(UserContext)\n\n  const history = useHistory()\n  useEffect(()=>{\n     const user = JSON.parse(localStorage.getItem(\"user\"))\n     \n\n     if(user){\n       dispatch({type:\"USER\",payload:user})  //storing user in payload\n\n     }else{\n       if(!history.location.pathname.startsWith('/reset'))\n          history.push('/signin')\n     }\n  },[])\n  return(\n\n    <Switch>\n\n        <Route exact path=\"/\">\n            <Home />  \n          </Route>\n\n          <Route path=\"/signin\">\n              <SignIn />\n          </Route>\n\n          <Route exact path=\"/profile\">\n              <Profile />\n          </Route>\n\n          <Route path=\"/signup\">\n              <Signup />\n          </Route>\n\n          <Route path=\"/create\">\n              <CreatePost />\n          </Route>\n\n          <Route path=\"/profile/:userid\">\n              <UserProfile />\n          </Route>\n\n          <Route path=\"/myfollowingpost\">\n              <SubscribedUser />\n          </Route>\n\n          <Route path=\"/reset\">\n              <Reset />\n          </Route>\n\n    </Switch>\n  )\n}\n\n\nfunction App() {\n\n  const [state,dispatch] = useReducer(reducer,initialState)\n  \n  return (\n\n      <UserContext.Provider value={{state,dispatch}} >\n          \n          <BrowserRouter>\n            <Navbar />\n            <Routing />    \n          </BrowserRouter>\n\n      </UserContext.Provider>\n     \n\n  )\n}\n\nexport default App\n","C:\\Users\\bunny\\Desktop\\completed\\Mern\\server\\client\\src\\reportWebVitals.js",[],"C:\\Users\\bunny\\Desktop\\completed\\Mern\\server\\client\\src\\components\\Navbar.js",[],"C:\\Users\\bunny\\Desktop\\completed\\Mern\\server\\client\\src\\components\\screens\\Home.js",["70","71","72","73","74"],"import React,{useState,useEffect,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst Home = () => {\r\n    const  [data,setData] = useState([])\r\n    const {state,dispatch} = useContext(UserContext)\r\n\r\n    useEffect(()=>{\r\n        fetch(\"/allpost\",{\r\n            headers:{\r\n                \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            setData(result.posts)\r\n        })\r\n    },[])\r\n\r\n    const likePost = (id)=>{\r\n            fetch('/like',{\r\n                method:\"put\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\",\r\n                    'Accept': 'application/json',\r\n                    \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n                },\r\n                body:JSON.stringify({\r\n                    postId: id\r\n                })\r\n            }).then(res=>res.json())\r\n            .then(result=>{\r\n                console.log(result)\r\n                const newData = data.map(item=>{\r\n                    if(item._id==result._id){\r\n                        return result\r\n                    }else{\r\n                        return item\r\n                    }\r\n                })\r\n\r\n\r\n                setData(newData)\r\n            })\r\n    }  \r\n    const unlikePost = (id)=>{\r\n            fetch('/unlike',{\r\n                method:\"put\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\",\r\n                    'Accept': 'application/json',\r\n                    \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n                },\r\n                body:JSON.stringify({\r\n                    postId: id\r\n                })\r\n            }).then(res=>res.json())\r\n            .then(result=>{\r\n                console.log(result)\r\n                const newData = data.map(item=>{\r\n                    if(item._id==result._id){\r\n                        return result\r\n                    }else{\r\n                        return item\r\n                    }\r\n                })\r\n\r\n\r\n                setData(newData)\r\n            })\r\n    }\r\n\r\nconst makeComment = (text,postId)=>{\r\n        fetch('/comment',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:postId,\r\n                text:text\r\n\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n\r\n    }\r\n\r\n    const deletePost = (postid)=>{\r\n        fetch(`/deletepost/${postid}`,{\r\n            method:\"delete\",\r\n            headers:{\r\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n          const newData = data.filter(item=>{\r\n              return item._id!==result._id\r\n          })\r\n          setData(newData)\r\n        }).catch(err=>console.log(err))\r\n    }\r\n    return (\r\n        \r\n        <div className=\"home\">\r\n            {\r\n                data.map(item=>{\r\n                    return(\r\n                     \r\n                        <div className=\"card home-card\" key={item?.id}>\r\n                            <h5 style={{padding:\"5px\"}}><Link to={item.postedBy._id !== state._id?\"/profile/\"+item.postedBy._id :\"/profile\" }>{item.postedBy.name} </Link>\r\n                         \r\n                            {item.postedBy._id == state._id\r\n                            && \r\n\r\n                            <i className=\"material-icons\" \r\n                            style={{float:\"right\"}}\r\n                            onClick={()=>deletePost(item._id)}\r\n                             >delete</i>\r\n                            }\r\n                            \r\n                            \r\n                            </h5>\r\n                            <div className=\"card-image\">\r\n                                <img alt=\"\" src={item.photo}/>\r\n            \r\n                            </div>\r\n            \r\n                            <div className=\"card-content\">\r\n                            <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\r\n                            {item.likes.includes(state._id)?\r\n                             <i className=\"material-icons\" \r\n                             onClick={()=>{unlikePost(item._id)}}\r\n                             >thumb_down</i>\r\n                            :\r\n                            <i className=\"material-icons\"\r\n                            onClick={()=>{likePost(item._id)}}\r\n                            >thumb_up</i>\r\n\r\n                             }\r\n                           \r\n                            <h6>{item.likes.length} likes</h6>\r\n            \r\n                            <h6>{item.title}</h6>\r\n                            <p>{item.body}</p>\r\n                            {\r\n                                item.comments.map(record=>{\r\n                                    return(\r\n                                        <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name} </span>{record.text}</h6> \r\n                                       \r\n                                    )\r\n                                    \r\n                                })\r\n                                \r\n                            }\r\n                             \r\n                                        \r\n                                        \r\n                            <form onSubmit={(e)=>{\r\n                                \r\n                                e.preventDefault()\r\n                                makeComment(e.target[0].value,item._id)\r\n                            \r\n                            }}>\r\n                            <input type=\"text\" placeholder=\"add a comment\"/>\r\n\r\n                            </form>\r\n                            </div>\r\n                        </div>\r\n\r\n                    )\r\n                })\r\n            }\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\bunny\\Desktop\\completed\\Mern\\server\\client\\src\\components\\screens\\Profile.js",["75","76"],"import React,{useEffect,useState,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\n\r\nconst Profile  = ()=>{\r\n    const [mypics,setPics] = useState([])\r\n    const {state,dispatch} = useContext(UserContext)\r\n    const [image,setImage] = useState(\"\")\r\n    useEffect(()=>{\r\n       fetch('/mypost',{\r\n           headers:{\r\n               \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n           }\r\n       }).then(res=>res.json())\r\n       .then(result=>{\r\n           console.log(result)\r\n           setPics(result.mypost)\r\n       })\r\n    },[])\r\n    useEffect(()=>{\r\n       if(image){\r\n        const data = new FormData()\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"insta_clone\")\r\n        data.append(\"cloud_name\",\"dg5k6y6pc\")\r\n        fetch(\"https://api.cloudinary.com/v1_1/dg5k6y6pc/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n           fetch('/updatepic',{\r\n               method:\"put\",\r\n               headers:{\r\n                   \"Content-Type\":\"application/json\",\r\n                   \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n               },\r\n               body:JSON.stringify({\r\n                   pic:data.url\r\n               })\r\n           }).then(res=>res.json())\r\n           .then(result=>{\r\n               console.log(result)\r\n               localStorage.setItem(\"user\",JSON.stringify({...state,pic:result.pic}))\r\n               dispatch({type:\"UPDATEPIC\",payload:result.pic})\r\n               //window.location.reload()\r\n           })\r\n       \r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n       }\r\n    },[image])\r\n   \r\n    const updatePhoto = (file)=>{\r\n        setImage(file)\r\n    }\r\n   return (\r\n       <div style={{maxWidth:\"550px\",margin:\"0px auto\"}}>\r\n           <div style={{\r\n              margin:\"18px 0px\",\r\n               borderBottom:\"1px solid grey\"\r\n           }}>\r\n\r\n         \r\n           <div style={{\r\n               display:\"flex\",\r\n               justifyContent:\"space-around\",\r\n              \r\n           }}>\r\n               <div>\r\n                   <img style={{width:\"160px\",height:\"160px\",borderRadius:\"80px\"}}\r\n                   src={state?state.pic:\"loading\"}\r\n                   />\r\n                 \r\n               </div>\r\n               <div>\r\n                   <h4>{state?state.name:\"loading\"}</h4>\r\n                   <h5>{state?state.email:\"loading\"}</h5>\r\n                   <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"108%\"}}>\r\n                       <h6>{mypics.length} posts</h6>\r\n                       <h6>{state?state.followers.length:\"0\"} followers</h6>\r\n                       <h6>{state?state.following.length:\"0\"} following</h6>\r\n                   </div>\r\n\r\n               </div>\r\n           </div>\r\n        \r\n            <div className=\"file-field input-field\" style={{margin:\"10px\"}}>\r\n            <div className=\"btn #64b5f6 blue darken-1\">\r\n                <span>Update pic</span>\r\n                <input type=\"file\" onChange={(e)=>updatePhoto(e.target.files[0])} />\r\n            </div>\r\n            <div className=\"file-path-wrapper\">\r\n                <input className=\"file-path validate\" type=\"text\" />\r\n            </div>\r\n            </div>\r\n            </div>      \r\n           <div className=\"gallery\">\r\n               {\r\n                   mypics.map(item=>{\r\n                       return(\r\n                        <img key={item._id} className=\"item\" src={item.photo} alt={item.title}/>  \r\n                       )\r\n                   })\r\n               }\r\n\r\n           \r\n           </div>\r\n       </div>\r\n   )\r\n}\r\n\r\n\r\nexport default Profile","C:\\Users\\bunny\\Desktop\\completed\\Mern\\server\\client\\src\\components\\screens\\UserProfile.js",["77"],"import React,{useEffect,useState,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {useParams} from 'react-router-dom'\r\n\r\nconst Profile = () => {\r\n    const [userProfile,setProfile] = useState(null)\r\n    \r\n    const {state,dispatch} = useContext(UserContext)\r\n   \r\n    const {userid} = useParams()\r\n\r\n    const[showFollow,setshowFollow] = useState(state?!state.following.includes(userid):true)\r\n    useEffect(()=>{\r\n        fetch(`/user/${userid}`,{\r\n            headers:{\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            setProfile(result)\r\n        })\r\n    },[])\r\n\r\n    const followUser = ()=>{\r\n        fetch('/follow',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n\r\n            },\r\n            body:JSON.stringify({\r\n                followId:userid\r\n            })\r\n        })\r\n            .then(res=>res.json())\r\n            .then(data=>{\r\n                dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n                localStorage.setItem(\"user\",JSON.stringify(data))\r\n                console.log(data)\r\n                setProfile((prevState)=>{\r\n                    return{\r\n                        ...prevState,\r\n                        user:{\r\n                            ...prevState.user,\r\n                            followers:[...prevState.user.followers,data._id]\r\n                        }\r\n\r\n                    }\r\n                }\r\n                )\r\n                setshowFollow(false)\r\n            })\r\n        }\r\n\r\n        const unfollowUser = ()=>{\r\n            fetch('/unfollow',{\r\n                method:\"put\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\",\r\n                    \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n    \r\n                },\r\n                body:JSON.stringify({\r\n                    followId:userid\r\n                })\r\n            })\r\n                .then(res=>res.json())\r\n                .then(data=>{\r\n\r\n                    dispatch({type:\"UPDATE\",payload:{following:data.following,followers:data.followers}})\r\n                    localStorage.setItem(\"user\",JSON.stringify(data))\r\n                   \r\n                    console.log(data)\r\n                    setProfile((prevState)=>{\r\n                        const newFollower = prevState.user.followers.filter(item=>item!==data._id)\r\n                        return{\r\n                            ...prevState,\r\n                            user:{\r\n                                ...prevState.user,\r\n                                followers:newFollower\r\n                            }\r\n    \r\n                        }\r\n                    }\r\n                    )\r\n                    setshowFollow(true)\r\n                })\r\n            }\r\n    \r\n    return (\r\n        <>\r\n        {userProfile ? \r\n        \r\n        <div style={{maxWidth:\"550px\",margin:\"0px auto\"}}>\r\n           <div style={{display:\"flex\",\r\n           justifyContent:\"space-around\",\r\n           margin:\"18px 0px\",\r\n           borderBottom: \"1px solid grey\"\r\n           }}>\r\n               <div>\r\n                   <img alt=\"\" style={{width:\"160px\",height:\"160px\",borderRadius:\"80px\"}} \r\n                   src={userProfile.user.pic}/>\r\n               </div>\r\n               <div>\r\n                   <h4>\r\n                     {userProfile.user.name}\r\n                   </h4>  \r\n                   <h5>\r\n                     {userProfile.user.email}\r\n                   </h5>  \r\n                   <div style={{display:\"flex\",justifyContent:\"space-between\",width:\"108%\"}}>\r\n                       <h6>{userProfile.posts.length} Posts</h6>\r\n                       <h6>{userProfile.user.followers.length} followers</h6>\r\n                       <h6>{userProfile.user.following.length} following</h6>\r\n                   </div>\r\n\r\n                   {showFollow?\r\n                   <button style={{margin:\r\n                    '10px'}} className=\"btn waves-effect waves-light #42a5f5 blue lighten-1 \"\r\n                   onClick={()=>followUser()}\r\n                   >\r\n                  Follow\r\n                 </button>\r\n                   \r\n                     :\r\n                 <button style={{margin:\r\n                    '10px'}} className=\"btn waves-effect waves-light #42a5f5 blue lighten-1 \"\r\n                   onClick={()=>unfollowUser()}\r\n                   >\r\n                  UnFollow\r\n                 </button>\r\n}\r\n               </div>\r\n           </div>\r\n        <div className=\"gallery\">\r\n            {\r\n                userProfile.posts.map(item=>{\r\n                    return(\r\n                        <img key={item._id} className=\"item\" alt={item.title} src={item.photo}/>\r\n                    )\r\n                })\r\n            }\r\n           \r\n        </div>\r\n        </div>\r\n        \r\n        \r\n        \r\n        :<h1>Loading....!</h1>}\r\n        \r\n        </>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","C:\\Users\\bunny\\Desktop\\completed\\Mern\\server\\client\\src\\components\\screens\\SignUp.js",["78","79","80"],"import React,{useState,useEffect} from 'react'\r\nimport {Link,useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\nconst SignUp = () => {\r\n    const history = useHistory()\r\n    const [name,setName] = useState(\"\")\r\n    const [email,setEmail] = useState(\"\")\r\n    const [password,setPassword] = useState(\"\")\r\n    const [image,setImage] = useState(\"\")\r\n    const [url,setUrl] = useState(undefined)\r\n\r\n    useEffect (()=>{\r\n        if(url){\r\n            uploadFields()\r\n        }\r\n    },[url])\r\n\r\n\r\n    const uploadPic = () =>{\r\n        var data = new FormData();\r\n        data.append(\"file\",image);\r\n        data.append(\"upload_preset\",\"insta_clone\");\r\n        data.append(\"cloud_name\",\"dg5k6y6pc\");\r\n        fetch(\"https://api.cloudinary.com/v1_1/dg5k6y6pc/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n             setUrl(data.url)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n\r\n      \r\n    }\r\n\r\n    const uploadFields = ()=>{\r\n        if(!/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            \r\n            M.toast({html:\"invalid Email formate\",classes:\"#c62828 red darken-2\"})\r\n            return\r\n        }\r\n        fetch(\"/signup\",{\r\n            method:\"post\",\r\n            headers:{\"Content-Type\":\"application/json\"},\r\n            body: JSON.stringify({\r\n                name,\r\n                password,\r\n                email,\r\n                pic:url\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n           if(data.error){\r\n            M.toast({html:data.error,classes:\"#c62828 red darken-2\"})\r\n           }\r\n           else{\r\n               M.toast({html:data.message,classes:\"#43a047 green darken-1\"})\r\n               history.push('/signin')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n\r\n    }\r\n     \r\n    const PostData = ()=>{\r\n        if(image){\r\n            uploadPic()\r\n        }else{\r\n      \r\n         uploadFields()\r\n    }\r\n}\r\n\r\n\r\n    return (\r\n        <div className = \"mycard\">\r\n           <div className=\"card auth-card input-field\">\r\n               <h2>Instagram</h2> \r\n               <input type=\"text\"   placeholder=\"Name\" value={name} onChange={(e)=>setName(e.target.value)}/>\r\n               <input type=\"email\"  placeholder=\"Email\"  value={email}  onChange={(e)=>setEmail(e.target.value)}/>\r\n               <input type=\"password\" placeholder=\"Password\"  value={password} onChange={(e)=>setPassword(e.target.value)}/>\r\n\r\n             <div className=\"file-field input-field\">\r\n                <div className=\"btn #42a5f5 blue darken-1\">\r\n                    <span>Upload Profile Pic</span>\r\n                    <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])}/>\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\"/>\r\n                </div>\r\n            </div> \r\n              \r\n               <button className=\"btn waves-effect waves-light #42a5f5 blue darken-1 \"\r\n                 onClick={()=>PostData()}\r\n                >\r\n                  Signin\r\n               </button>\r\n\r\n               <h5>\r\n                   <Link to = \"/signin\">\r\n                       Already have an account ?\r\n                   </Link>\r\n               </h5>\r\n           </div>\r\n        </div>\r\n    )\r\n    }\r\n\r\n\r\nexport default SignUp\r\n","C:\\Users\\bunny\\Desktop\\completed\\Mern\\server\\client\\src\\components\\screens\\SignIn.js",["81"],"import React,{useState,useContext,} from 'react'\r\nimport { Link,useHistory } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nimport {UserContext} from '../../App'\r\n\r\nconst SignIn = () => {\r\n    const {state,dispatch} = useContext(UserContext)\r\n    const history  = useHistory()\r\n    const [email,setEmail] = useState(\"\")\r\n    const [password,setPassword] = useState(\"\")\r\n\r\n    const PostData = ()=>{\r\n\r\n    fetch(\"/signin\",{\r\n        method:\"post\",\r\n        headers:{\"Content-Type\":\"application/json\"},\r\n        body: JSON.stringify({\r\n            password,\r\n            email,\r\n        })\r\n    }).then(res=>res.json())\r\n    .then(data=>{\r\n        console.log(data)\r\n       if(data.error){\r\n        M.toast({html:data.error,classes:\"#c62828 red darken-2\"})\r\n       }\r\n       else{\r\n           localStorage.setItem(\"jwt\",data.token)\r\n           localStorage.setItem(\"user\",JSON.stringify(data.user))\r\n           dispatch({type:\"USER\",payload:data.user})\r\n           M.toast({html:\"signedin success\",classes:\"#43a047 green darken-1\"})\r\n           history.push('/')\r\n       }\r\n    }).catch(err=>{\r\n        console.log(err)\r\n    })\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className = \"mycard\">\r\n           <div className=\"card auth-card input-field\">\r\n               <h2>Instagram</h2> \r\n               <input type=\"email\"  placeholder=\"Email\"  value={email}  onChange={(e)=>setEmail(e.target.value)}/>\r\n               <input type=\"password\" placeholder=\"Password\"  value={password} onChange={(e)=>setPassword(e.target.value)}/>\r\n               <button className=\"btn waves-effect waves-light #42a5f5 blue lighten-1 \"\r\n               onClick={()=>PostData()}\r\n               >\r\n                  Signin\r\n               </button>\r\n               <h5>\r\n                   <Link to = \"/signup\">\r\n                       Don't have an account ?\r\n                   </Link>\r\n               </h5>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignIn\r\n","C:\\Users\\bunny\\Desktop\\completed\\Mern\\server\\client\\src\\components\\screens\\CreatePost.js",["82","83"],"import React,{useState,useEffect} from 'react'\r\nimport { Link,useHistory } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\n\r\nconst CreatePost = () => {\r\n    const history = useHistory()\r\n    const [title,setTitle] = useState(\"\")\r\n    const [body,setBody] = useState(\"\")\r\n    const [image,setImage] = useState(\"\")\r\n    const [url,setUrl] = useState(\"\")\r\n\r\n    useEffect(()=>{\r\n        if(url){\r\n\r\n            fetch(\"/createpost\",{\r\n                method:\"post\",\r\n                headers:{\"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            \r\n            },\r\n                body: JSON.stringify({\r\n                    title,\r\n                    body,\r\n                    pic:url\r\n                })\r\n            }).then(res=>res.json())\r\n            .then(data=>{\r\n               if(data.error){\r\n                M.toast({html:data.error,classes:\"#c62828 red darken-2\"})\r\n               }\r\n               else{\r\n                   M.toast({html:\"Created Post successfully\",classes:\"#43a047 green darken-1\"})\r\n                   history.push('/')\r\n               }\r\n            }).catch(err=>{\r\n                console.log(err)\r\n            })\r\n\r\n        }     \r\n\r\n    },[url])\r\n\r\n    const postDetails = ()=>{\r\n        var data = new FormData();\r\n        data.append(\"file\",image);\r\n        data.append(\"upload_preset\",\"insta_clone\");\r\n        data.append(\"cloud_name\",\"dg5k6y6pc\");\r\n        fetch(\"https://api.cloudinary.com/v1_1/dg5k6y6pc/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n             setUrl(data.url)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        })\r\n\r\n      \r\n        }\r\n    \r\n\r\n     return (\r\n        <div className=\"card input-field\"\r\n        style={{\r\n            margin: \"30px auto\",\r\n            maxWidth: \"500px\",\r\n            padding: \"20px\",\r\n            textAlign: \"center\"\r\n\r\n        }}\r\n        >\r\n            <input type=\"text\" placeholder=\"title\"\r\n            value={title}\r\n            onChange = {(e)=>setTitle(e.target.value)}\r\n            />\r\n            <input type=\"text\" placeholder=\"body\"\r\n            value={body}\r\n            onChange = {(e)=>setBody(e.target.value)}\r\n            />  \r\n\r\n            <div className=\"file-field input-field\">\r\n                <div className=\"btn #42a5f5 blue darken-1\">\r\n                    <span>Upload image</span>\r\n                    <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])}/>\r\n                </div>\r\n                <div className=\"file-path-wrapper\">\r\n                    <input className=\"file-path validate\" type=\"text\"/>\r\n                </div>\r\n\r\n              \r\n            </div> \r\n\r\n              <button className=\"btn waves-effect waves-light #42a5f5 blue darken-1 \"\r\n              onClick={()=>postDetails()}\r\n              >\r\n                  Submit Post\r\n               </button>  \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default CreatePost\r\n","C:\\Users\\bunny\\Desktop\\completed\\Mern\\server\\client\\src\\components\\screens\\SubscribedUser.js",["84","85","86","87","88"],"import React,{useState,useEffect,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst Home = () => {\r\n    const  [data,setData] = useState([])\r\n    const {state,dispatch} = useContext(UserContext)\r\n\r\n    useEffect(()=>{\r\n        fetch(\"/getsubpost\",{\r\n            headers:{\r\n                \"Authorization\": \"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result.posts)\r\n            setData(result.posts)\r\n        })\r\n    },[])\r\n\r\n    const likePost = (id)=>{\r\n            fetch('/like',{\r\n                method:\"put\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\",\r\n                    'Accept': 'application/json',\r\n                    \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n                },\r\n                body:JSON.stringify({\r\n                    postId: id\r\n                })\r\n            }).then(res=>res.json())\r\n            .then(result=>{\r\n                console.log(result)\r\n                const newData = data.map(item=>{\r\n                    if(item._id==result._id){\r\n                        return result\r\n                    }else{\r\n                        return item\r\n                    }\r\n                })\r\n\r\n\r\n                setData(newData)\r\n            })\r\n    }  \r\n    const unlikePost = (id)=>{\r\n            fetch('/unlike',{\r\n                method:\"put\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\",\r\n                    'Accept': 'application/json',\r\n                    \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n                },\r\n                body:JSON.stringify({\r\n                    postId: id\r\n                })\r\n            }).then(res=>res.json())\r\n            .then(result=>{\r\n                console.log(result)\r\n                const newData = data.map(item=>{\r\n                    if(item._id==result._id){\r\n                        return result\r\n                    }else{\r\n                        return item\r\n                    }\r\n                })\r\n\r\n\r\n                setData(newData)\r\n            })\r\n    }\r\n\r\nconst makeComment = (text,postId)=>{\r\n        fetch('/comment',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:postId,\r\n                text:text\r\n\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n            const newData = data.map(item=>{\r\n                if(item._id==result._id){\r\n                    return result\r\n                }else{\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n\r\n    }\r\n\r\n    const deletePost = (postid)=>{\r\n        fetch(`/deletepost/${postid}`,{\r\n            method:\"delete\",\r\n            headers:{\r\n                Authorization:\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n          const newData = data.filter(item=>{\r\n              return item._id!==result._id\r\n          })\r\n          setData(newData)\r\n        }).catch(err=>console.log(err))\r\n    }\r\n    return (\r\n        \r\n        <div className=\"home\">\r\n            {\r\n                data.map(item=>{\r\n                    return(\r\n                     \r\n                        <div className=\"card home-card\" key={item?.id}>\r\n                            <h5 style={{padding:\"5px\"}}><Link to={item.postedBy._id !== state._id?\"/profile/\"+item.postedBy._id :\"/profile\" }>{item.postedBy.name} </Link>\r\n                         \r\n                            {item.postedBy._id == state._id\r\n                            && \r\n\r\n                            <i className=\"material-icons\" \r\n                            style={{float:\"right\"}}\r\n                            onClick={()=>deletePost(item._id)}\r\n                             >delete</i>\r\n                            }\r\n                            \r\n                            \r\n                            </h5>\r\n                            <div className=\"card-image\">\r\n                                <img alt=\"\" src={item.photo}/>\r\n            \r\n                            </div>\r\n            \r\n                            <div className=\"card-content\">\r\n                            <i className=\"material-icons\" style={{color:\"red\"}}>favorite</i>\r\n                            {item.likes.includes(state._id)?\r\n                             <i className=\"material-icons\" \r\n                             onClick={()=>{unlikePost(item._id)}}\r\n                             >thumb_down</i>\r\n                            :\r\n                            <i className=\"material-icons\"\r\n                            onClick={()=>{likePost(item._id)}}\r\n                            >thumb_up</i>\r\n\r\n                             }\r\n                           \r\n                            <h6>{item.likes.length} likes</h6>\r\n            \r\n                            <h6>{item.title}</h6>\r\n                            <p>{item.body}</p>\r\n                            {\r\n                                item.comments.map(record=>{\r\n                                    return(\r\n                                        <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name} </span>{record.text}</h6> \r\n                                       \r\n                                    )\r\n                                    \r\n                                })\r\n                                \r\n                            }\r\n                             \r\n                                        \r\n                                        \r\n                            <form onSubmit={(e)=>{\r\n                                \r\n                                e.preventDefault()\r\n                                makeComment(e.target[0].value,item._id)\r\n                            \r\n                            }}>\r\n                            <input type=\"text\" placeholder=\"add a comment\"/>\r\n\r\n                            </form>\r\n                            </div>\r\n                        </div>\r\n\r\n                    )\r\n                })\r\n            }\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","C:\\Users\\bunny\\Desktop\\completed\\Mern\\server\\client\\src\\reducers\\userReducer.js",["89","90","91","92"],"export const initialState = null\r\n\r\n\r\nexport const reducer = (state,action) =>{\r\n      if(action.type ==\"USER\"){\r\n          return action.payload\r\n      }\r\n      if(action.type ==\"CLEAR\"){\r\n        return null\r\n    }\r\n    if(action.type ==\"UPDATE\"){\r\n      return {\r\n        ...state,\r\n        followers:action.payload.followers,\r\n        following:action.payload.following,\r\n\r\n      }\r\n  }\r\n      if(action.type ==\"UPDATEPIC\"){\r\n        return {\r\n          ...state,\r\n          pic:action.payload\r\n\r\n        }\r\n    }\r\n  \r\n\r\n      return state\r\n}",["93","94"],"C:\\Users\\bunny\\Desktop\\completed\\Mern\\server\\client\\src\\components\\screens\\Reset.js",["95","96","97"],"import React,{useState,useContext,} from 'react'\r\nimport { Link,useHistory } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nimport {UserContext} from '../../App'\r\n\r\nconst Reset = () => {\r\n  \r\n    const history  = useHistory()\r\n    const [email,setEmail] = useState(\"\")\r\n   \r\n    const PostData = ()=>{\r\n\r\n    fetch(\"/reset-password\",{\r\n        method:\"post\",\r\n        headers:{\"Content-Type\":\"application/json\"},\r\n        body: JSON.stringify({\r\n            email,\r\n        })\r\n    }).then(res=>res.json())\r\n    .then(data=>{\r\n       \r\n       if(data.error){\r\n        M.toast({html:data.error,classes:\"#c62828 red darken-2\"})\r\n       }\r\n       else{\r\n    \r\n           M.toast({html:\"data.message\",classes:\"#43a047 green darken-1\"})\r\n           history.push('/signin')\r\n       }\r\n    }).catch(err=>{\r\n        console.log(err)\r\n    })\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className = \"mycard\">\r\n           <div className=\"card auth-card input-field\">\r\n               <h2>Instagram</h2> \r\n               <input type=\"email\"  placeholder=\"Email\"  value={email}  onChange={(e)=>setEmail(e.target.value)}/>\r\n               <button className=\"btn waves-effect waves-light #42a5f5 blue lighten-1 \"\r\n               onClick={()=>PostData()}\r\n               >\r\n                  Reset password\r\n               </button>\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reset\r\n",{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":19,"column":10,"nodeType":"104","messageId":"105","endLine":19,"endColumn":15},{"ruleId":"106","severity":1,"message":"107","line":33,"column":5,"nodeType":"108","endLine":33,"endColumn":7,"suggestions":"109"},{"ruleId":"102","severity":1,"message":"110","line":8,"column":18,"nodeType":"104","messageId":"105","endLine":8,"endColumn":26},{"ruleId":"111","severity":1,"message":"112","line":37,"column":32,"nodeType":"113","messageId":"114","endLine":37,"endColumn":34},{"ruleId":"111","severity":1,"message":"112","line":63,"column":32,"nodeType":"113","messageId":"114","endLine":63,"endColumn":34},{"ruleId":"111","severity":1,"message":"112","line":91,"column":28,"nodeType":"113","messageId":"114","endLine":91,"endColumn":30},{"ruleId":"111","severity":1,"message":"112","line":128,"column":48,"nodeType":"113","messageId":"114","endLine":128,"endColumn":50},{"ruleId":"106","severity":1,"message":"115","line":53,"column":7,"nodeType":"108","endLine":53,"endColumn":14,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":72,"column":20,"nodeType":"119","endLine":74,"endColumn":22},{"ruleId":"106","severity":1,"message":"120","line":23,"column":7,"nodeType":"108","endLine":23,"endColumn":9,"suggestions":"121"},{"ruleId":"106","severity":1,"message":"122","line":17,"column":7,"nodeType":"108","endLine":17,"endColumn":12,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":40,"column":23,"nodeType":"126","messageId":"127","endLine":40,"endColumn":24,"suggestions":"128"},{"ruleId":"124","severity":1,"message":"125","line":40,"column":48,"nodeType":"126","messageId":"127","endLine":40,"endColumn":49,"suggestions":"129"},{"ruleId":"102","severity":1,"message":"103","line":7,"column":12,"nodeType":"104","messageId":"105","endLine":7,"endColumn":17},{"ruleId":"102","severity":1,"message":"130","line":2,"column":10,"nodeType":"104","messageId":"105","endLine":2,"endColumn":14},{"ruleId":"106","severity":1,"message":"131","line":42,"column":7,"nodeType":"108","endLine":42,"endColumn":12,"suggestions":"132"},{"ruleId":"102","severity":1,"message":"110","line":8,"column":18,"nodeType":"104","messageId":"105","endLine":8,"endColumn":26},{"ruleId":"111","severity":1,"message":"112","line":37,"column":32,"nodeType":"113","messageId":"114","endLine":37,"endColumn":34},{"ruleId":"111","severity":1,"message":"112","line":63,"column":32,"nodeType":"113","messageId":"114","endLine":63,"endColumn":34},{"ruleId":"111","severity":1,"message":"112","line":91,"column":28,"nodeType":"113","messageId":"114","endLine":91,"endColumn":30},{"ruleId":"111","severity":1,"message":"112","line":128,"column":48,"nodeType":"113","messageId":"114","endLine":128,"endColumn":50},{"ruleId":"111","severity":1,"message":"112","line":5,"column":22,"nodeType":"113","messageId":"114","endLine":5,"endColumn":24},{"ruleId":"111","severity":1,"message":"112","line":8,"column":22,"nodeType":"113","messageId":"114","endLine":8,"endColumn":24},{"ruleId":"111","severity":1,"message":"112","line":11,"column":20,"nodeType":"113","messageId":"114","endLine":11,"endColumn":22},{"ruleId":"111","severity":1,"message":"112","line":19,"column":22,"nodeType":"113","messageId":"114","endLine":19,"endColumn":24},{"ruleId":"98","replacedBy":"133"},{"ruleId":"100","replacedBy":"134"},{"ruleId":"102","severity":1,"message":"135","line":1,"column":24,"nodeType":"104","messageId":"105","endLine":1,"endColumn":34},{"ruleId":"102","severity":1,"message":"130","line":2,"column":10,"nodeType":"104","messageId":"105","endLine":2,"endColumn":14},{"ruleId":"102","severity":1,"message":"136","line":4,"column":9,"nodeType":"104","messageId":"105","endLine":4,"endColumn":20},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["139"],"'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["140"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["141"],"React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["142"],"no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["143","144"],["145","146"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["147"],["137"],["138"],"'useContext' is defined but never used.","'UserContext' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"messageId":"156","fix":"157","desc":"158"},{"messageId":"159","fix":"160","desc":"161"},{"messageId":"156","fix":"162","desc":"158"},{"messageId":"159","fix":"163","desc":"161"},{"desc":"164","fix":"165"},"Update the dependencies array to be: [dispatch, history]",{"range":"166","text":"167"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"168","text":"169"},"Update the dependencies array to be: [userid]",{"range":"170","text":"171"},"Update the dependencies array to be: [uploadFields, url]",{"range":"172","text":"173"},"removeEscape",{"range":"174","text":"175"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"176","text":"177"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"178","text":"175"},{"range":"179","text":"177"},"Update the dependencies array to be: [body, history, title, url]",{"range":"180","text":"181"},[1127,1129],"[dispatch, history]",[1705,1712],"[dispatch, image, state]",[724,726],"[userid]",[500,505],"[uploadFields, url]",[1078,1079],"",[1078,1078],"\\",[1103,1104],[1103,1103],[1251,1256],"[body, history, title, url]"]